{"ast":null,"code":"var _jsxFileName = \"C:\\\\santhoshksr\\\\blogging platform\\\\frontend\\\\src\\\\components\\\\ProtectedRoutes.jsx\";\nimport React from \"react\";\nimport { Navigate } from \"react-router-dom\";\nimport jwtDecode from \"jwt-decode\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ProtectedRoute({\n  children,\n  role\n}) {\n  const token = localStorage.getItem(\"token\");\n  if (!token) {\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 12\n    }, this);\n  }\n  try {\n    const decoded = jwtDecode(token);\n\n    // Optional: Check if token is expired\n    const currentTime = Date.now() / 1000;\n    if (decoded.exp < currentTime) {\n      localStorage.removeItem(\"token\");\n      return /*#__PURE__*/_jsxDEV(Navigate, {\n        to: \"/login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 14\n      }, this);\n    }\n\n    // Optional role-based restriction\n    if (role && decoded.role !== role) {\n      return /*#__PURE__*/_jsxDEV(Navigate, {\n        to: \"/login\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 14\n      }, this);\n    }\n    return children;\n  } catch (error) {\n    console.error(\"Invalid token:\", error);\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 12\n    }, this);\n  }\n}\n_c = ProtectedRoute;\nvar _c;\n$RefreshReg$(_c, \"ProtectedRoute\");","map":{"version":3,"names":["React","Navigate","jwtDecode","jsxDEV","_jsxDEV","ProtectedRoute","children","role","token","localStorage","getItem","to","fileName","_jsxFileName","lineNumber","columnNumber","decoded","currentTime","Date","now","exp","removeItem","error","console","_c","$RefreshReg$"],"sources":["C:/santhoshksr/blogging platform/frontend/src/components/ProtectedRoutes.jsx"],"sourcesContent":["import React from \"react\";\r\nimport { Navigate } from \"react-router-dom\";\r\nimport jwtDecode from \"jwt-decode\";\r\n\r\nexport default function ProtectedRoute({ children, role }) {\r\n  const token = localStorage.getItem(\"token\");\r\n\r\n  if (!token) {\r\n    return <Navigate to=\"/login\" />;\r\n  }\r\n\r\n  try {\r\n    const decoded = jwtDecode(token);\r\n\r\n    // Optional: Check if token is expired\r\n    const currentTime = Date.now() / 1000;\r\n    if (decoded.exp < currentTime) {\r\n      localStorage.removeItem(\"token\");\r\n      return <Navigate to=\"/login\" />;\r\n    }\r\n\r\n    // Optional role-based restriction\r\n    if (role && decoded.role !== role) {\r\n      return <Navigate to=\"/login\" />;\r\n    }\r\n\r\n    return children;\r\n  } catch (error) {\r\n    console.error(\"Invalid token:\", error);\r\n    return <Navigate to=\"/login\" />;\r\n  }\r\n}\r\n"],"mappings":";AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,QAAQ,QAAQ,kBAAkB;AAC3C,OAAOC,SAAS,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnC,eAAe,SAASC,cAAcA,CAAC;EAAEC,QAAQ;EAAEC;AAAK,CAAC,EAAE;EACzD,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAE3C,IAAI,CAACF,KAAK,EAAE;IACV,oBAAOJ,OAAA,CAACH,QAAQ;MAACU,EAAE,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACjC;EAEA,IAAI;IACF,MAAMC,OAAO,GAAGd,SAAS,CAACM,KAAK,CAAC;;IAEhC;IACA,MAAMS,WAAW,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,GAAG,IAAI;IACrC,IAAIH,OAAO,CAACI,GAAG,GAAGH,WAAW,EAAE;MAC7BR,YAAY,CAACY,UAAU,CAAC,OAAO,CAAC;MAChC,oBAAOjB,OAAA,CAACH,QAAQ;QAACU,EAAE,EAAC;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IACjC;;IAEA;IACA,IAAIR,IAAI,IAAIS,OAAO,CAACT,IAAI,KAAKA,IAAI,EAAE;MACjC,oBAAOH,OAAA,CAACH,QAAQ;QAACU,EAAE,EAAC;MAAQ;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC;IACjC;IAEA,OAAOT,QAAQ;EACjB,CAAC,CAAC,OAAOgB,KAAK,EAAE;IACdC,OAAO,CAACD,KAAK,CAAC,gBAAgB,EAAEA,KAAK,CAAC;IACtC,oBAAOlB,OAAA,CAACH,QAAQ;MAACU,EAAE,EAAC;IAAQ;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACjC;AACF;AAACS,EAAA,GA3BuBnB,cAAc;AAAA,IAAAmB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}